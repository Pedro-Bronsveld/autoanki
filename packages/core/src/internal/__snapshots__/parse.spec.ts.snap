// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`note parsing errors should throw on invalid text: Input text:
</note> 1`] = `"Expected note start delimiter"`;

exports[`note parsing errors should throw on invalid text: Input text:
<note type="Basic">
</note> 1`] = `"Empty note"`;

exports[`note parsing errors should throw on invalid text: Input text:
<note type="Basic">
<field name="Front">
</field>
<field name="Front">
</field>
</note> 1`] = `"Duplicate field: Front"`;

exports[`note parsing errors should throw on invalid text: Input text:
<note type="Basic">
<note type="Basic"> 1`] = `"Unexpected note start delimiter"`;

exports[`note parsing errors should throw on invalid text: Input text:
--- 1`] = `"Expected note start delimiter"`;

exports[`note parsing errors should throw on invalid text: Input text:
---Basic
~~Front
~~
~~Front
~~
--- 1`] = `"Duplicate field: Front"`;

exports[`note parsing errors should throw on invalid text: Input text:
---Basic
--- 1`] = `"Empty note"`;

exports[`note parsing errors should throw on invalid text: Input text:
---Basic
---Basic 1`] = `"Unexpected note start delimiter"`;

exports[`note parsing should parse multiple notes: Input text:
<note type="Basic">
<field name="Front">
1 + 1 = ?
</field>
<field name="Back">
1 + 1 = 2
</field>
</note>
<note type="Basic">
<field name="Front">
1 + 1 = ?
</field>
<field name="Back">
1 + 1 = 2
</field>
</note>
<note type="Basic">
<field name="Front">
1 + 1 = ?
</field>
<field name="Back">
1 + 1 = 2
</field>
</note> 1`] = `
Array [
  Object {
    "fields": Object {
      "Back": "1 + 1 = 2
",
      "Front": "1 + 1 = ?
",
    },
    "noteType": "Basic",
  },
  Object {
    "fields": Object {
      "Back": "1 + 1 = 2
",
      "Front": "1 + 1 = ?
",
    },
    "noteType": "Basic",
  },
  Object {
    "fields": Object {
      "Back": "1 + 1 = 2
",
      "Front": "1 + 1 = ?
",
    },
    "noteType": "Basic",
  },
]
`;

exports[`note parsing should parse multiple notes: Input text:
---Basic
~~Front
1 + 1 = ?
~~
~~Back
1 + 1 = 2
~~
---
---Basic
~~Front
1 + 1 = ?
~~
~~Back
1 + 1 = 2
~~
---
---Basic
~~Front
1 + 1 = ?
~~
~~Back
1 + 1 = 2
~~
--- 1`] = `
Array [
  Object {
    "fields": Object {
      "Back": "1 + 1 = 2
",
      "Front": "1 + 1 = ?
",
    },
    "noteType": "Basic",
  },
  Object {
    "fields": Object {
      "Back": "1 + 1 = 2
",
      "Front": "1 + 1 = ?
",
    },
    "noteType": "Basic",
  },
  Object {
    "fields": Object {
      "Back": "1 + 1 = 2
",
      "Front": "1 + 1 = ?
",
    },
    "noteType": "Basic",
  },
]
`;

exports[`note parsing should parse one note: Input text:

<note type="Basic">

<field name="Front">

1 + 1 = ?

</field>

<field name="Back">
1 + 1 = 2

</field>

</note> 1`] = `
Array [
  Object {
    "fields": Object {
      "Back": "1 + 1 = 2

",
      "Front": "
1 + 1 = ?

",
    },
    "noteType": "Basic",
  },
]
`;

exports[`note parsing should parse one note: Input text:

---Basic

~~Front

1 + 1 = ?

~~

~~Back
1 + 1 = 2

~~

--- 1`] = `
Array [
  Object {
    "fields": Object {
      "Back": "1 + 1 = 2

",
      "Front": "
1 + 1 = ?

",
    },
    "noteType": "Basic",
  },
]
`;

exports[`note parsing should parse one note: Input text:
<note type="Basic">
<field name="Front">
1 + 1 = ?
</field>
<field name="Back">
1 + 1 = 2
</field>
</note> 1`] = `
Array [
  Object {
    "fields": Object {
      "Back": "1 + 1 = 2
",
      "Front": "1 + 1 = ?
",
    },
    "noteType": "Basic",
  },
]
`;

exports[`note parsing should parse one note: Input text:
---Basic
~~Front
1 + 1 = ?
~~
~~Back
1 + 1 = 2
~~
--- 1`] = `
Array [
  Object {
    "fields": Object {
      "Back": "1 + 1 = 2
",
      "Front": "1 + 1 = ?
",
    },
    "noteType": "Basic",
  },
]
`;
